{"version":3,"sources":["routes/Price.tsx","routes/Chart.tsx","routes/Coin.tsx","routes/Coins.tsx","Router.tsx","ResetStyle.tsx","App.tsx","index.tsx","theme.ts"],"names":["Price","Chart","Container","styled","div","Header","header","Title","h1","props","theme","accentColor","BackBtn","button","textColor","Loader","span","Overview","OverviewItem","Description","p","Tabs","Tab","isActive","fontWeightBold","Coin","coinId","useParams","useState","loading","setLoading","state","useLocation","info","setInfo","priceInfo","setPriceInfo","priceMatch","name","rank","useMatch","chartMatch","useEffect","a","fetch","json","infoData","priceData","to","symbol","open_source","description","total_supply","max_supply","path","element","CoinsList","ul","li","bgColor","Img","img","Coins","coins","setCoins","response","slice","map","coin","id","src","toLowerCase","Router","process","ResetStyle","createGlobalStyle","GlobalStyle","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb60a908.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport { useLocation, useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\n\r\n// price url https://api.coinpaprika.com/v1/tickers/btc-bitcoin\r\n// general : `https://api.coinpaprika.com/v1/tickers/${coinId}`\r\nconst Price = () => {\r\n    return <h1>Price</h1>\r\n}\r\n\r\nexport default Price;","import styled from \"styled-components\";\r\n\r\nconst Chart = () => {\r\n    return <h1>Chart</h1>\r\n}\r\n\r\nexport default Chart;","import { useState, useEffect } from \"react\";\r\nimport { useLocation, useParams } from \"react-router-dom\";\r\nimport {BrowserRouter, Routes, Route, useMatch} from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\"\r\nimport Price from './Price'\r\nimport Chart from './Chart'\r\nimport styled from \"styled-components\";\r\n\r\ninterface RouteParmas {\r\n    coinId: string;\r\n}\r\n\r\ninterface RouterState {\r\n    name?:string;\r\n    rank?:number;\r\n}\r\n\r\n\r\ninterface InfoData {\r\n    id: string;\r\n    name: string;\r\n    symbol: string;\r\n    rank: number;\r\n    is_new: boolean;\r\n    is_active: boolean;\r\n    type: string;\r\n    contract: string;\r\n    platform: string;\r\n    // contracts: object;\r\n    // parent: object;\r\n    // tags: object;\r\n    // team: object;\r\n    description: string;\r\n    message: string;\r\n    open_source: boolean;\r\n    started_at: string;\r\n    development_status: string;\r\n    hardware_wallet: boolean;\r\n    proof_type: string;\r\n    org_structure: string;\r\n    hash_algorithm: string;\r\n    // links: object;\r\n    // links_extended: object;\r\n    // whitepaper: object;\r\n    first_data_at: string;\r\n    last_data_at: string;\r\n}\r\n\r\ninterface PriceData {\r\n    id: string;\r\n    name: string;\r\n    symbol: string;\r\n    rank: number;\r\n    circulating_supply: number;\r\n    total_supply: number;\r\n    max_supply: number;\r\n    beta_value: number;\r\n    first_data_at: string;\r\n    last_updated: string;\r\n    quotes: {\r\n        USD:{\r\n            ath_date: string;\r\n            ath_price: number;\r\n            market_cap: number;\r\n            market_cap_change_24h: number;\r\n            percent_change_1h: number;\r\n            percent_change_1y: number;\r\n            percent_change_6h: number;\r\n            percent_change_7d: number;\r\n            percent_change_12h: number;\r\n            percent_change_15m: number;\r\n            percent_change_24h: number;\r\n            percent_change_30d: number;\r\n            percent_change_30m: number;\r\n            percent_from_price_ath: number;\r\n            volume_24h: number;\r\n            volume_24h_change_24h: number;\r\n            price: number;\r\n        }\r\n    };\r\n}\r\n\r\nconst Container = styled.div`\r\n    padding: 0px 20px;\r\n    max-width: 480px;\r\n    margin:0 auto;\r\n`;\r\n\r\nconst Header = styled.header`\r\n    height: 12vh;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n    color:${props => props.theme.accentColor};\r\n    font-size: 48px;\r\n`\r\nconst BackBtn = styled.button`\r\n    width: 15%;\r\n    height: 5vh;\r\n    color:${props => props.theme.textColor};\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    border:0;\r\n    border-radius: 100px;\r\n    &:hover {\r\n        width: 16%;\r\n        height: 6vh;\r\n    }\r\n`\r\n\r\nconst Loader = styled.span`\r\n    display: block;\r\n    text-align: center;\r\n`;\r\n\r\nconst Overview = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  padding: 10px 20px;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst OverviewItem = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  span:first-child {\r\n    font-size: 10px;\r\n    font-weight: 400;\r\n    text-transform: uppercase;\r\n    margin-bottom: 5px;\r\n  }\r\n`;\r\n\r\nconst Description = styled.p`\r\n  margin: 30px 0px;\r\n`;\r\n\r\nconst Tabs = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  margin: 25px 0px;\r\n  gap: 10px;\r\n`;\r\n\r\nconst Tab = styled.span<{ isActive: boolean }>`\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  padding: 7px 0px;\r\n  border-radius: 10px;\r\n  color: ${(props) =>\r\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\r\n  font-weight: ${(props) =>\r\n    props.isActive && props.theme.fontWeightBold };\r\n  a {\r\n    display: block;\r\n  }\r\n`;\r\n\r\n\r\nconst Coin = () => {\r\n\r\n    const { coinId } = useParams() as RouteParmas; // 이건 coinId을 (Param) 받음\r\n    const [loading, setLoading] = useState(true);\r\n    const { state } = useLocation(); // Link state로 내려준 값을 받을 수 있다.\r\n    const [info, setInfo] = useState<InfoData>();\r\n    const [priceInfo, setPriceInfo] = useState<PriceData>();\r\n\r\n\r\n    const name = state?.name || \"loading...\" as RouterState;\r\n    const rank = state?.rank || 0 as RouterState;\r\n    // 문제는 버튼을 눌러야 Location 정보가 넘어간다.\r\n\r\n    const priceMatch = useMatch(\"/:coinId/price\")\r\n    const chartMatch = useMatch(\"/:coinId/chart\") // 어디에 있는지 알려줌\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const infoData = await (await fetch(`https://api.coinpaprika.com/v1/coins/${coinId}`)).json();\r\n            const priceData = await (await fetch(`https://api.coinpaprika.com/v1/tickers/${coinId}`)).json()\r\n            setInfo(infoData);\r\n            setPriceInfo(priceData);\r\n            setLoading(false);\r\n             })();\r\n    }, [coinId])\r\n    return (\r\n        <Container>\r\n            <Header>\r\n                <Title>\r\n                    {state?.name ? state.name : loading ? \"Loading...\" : info?.name}\r\n                </Title>\r\n                <BackBtn>\r\n                    <Link to='/'> Home </Link>\r\n                </BackBtn>\r\n            </Header>\r\n            { loading ? (<Loader>Loading...</Loader>) : (\r\n                <>\r\n                    <Overview>\r\n                        <OverviewItem>\r\n                            <span>Rank:</span>\r\n                            <span>{info?.rank}</span>\r\n                        </OverviewItem>\r\n                        <OverviewItem>\r\n                            <span>Symbol:</span>\r\n                            <span>${info?.symbol}</span>\r\n                        </OverviewItem>\r\n                        <OverviewItem>\r\n                            <span>Open Source:</span>\r\n                            <span>{info?.open_source ? \"Yes\" : \"No\"}</span>\r\n                        </OverviewItem>\r\n                    </Overview>\r\n                    <Description>{info?.description}</Description>\r\n                    <Overview>\r\n                        <OverviewItem>\r\n                            <span>Total Suply:</span>\r\n                            <span>{priceInfo?.total_supply}</span>\r\n                        </OverviewItem>\r\n                        <OverviewItem>\r\n                            <span>Max Supply:</span>\r\n                            <span>{priceInfo?.max_supply}</span>\r\n                        </OverviewItem>\r\n                    </Overview>\r\n\r\n                    <Tabs>\r\n                        <Tab isActive={chartMatch !== null}>\r\n                            <Link to={`/${coinId}/chart`}>Chart</Link>\r\n                        </Tab>\r\n                        <Tab isActive={priceMatch !== null}>\r\n                            <Link to={`/${coinId}/price`}>Price</Link>\r\n                        </Tab>\r\n                    </Tabs>\r\n\r\n                    {/* <Link to={`/${coinId}/price`}>Price</Link>\r\n                    <Link to={`/${coinId}/chart`}>Chart</Link> */}\r\n                    <Routes>\r\n                        <Route path=\"price\" element={<Price/>} />\r\n                        <Route path=\"chart\" element={<Chart/>} />\r\n                    </Routes>\r\n                </>\r\n            )}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Coin;","import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\"\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst Container = styled.div`\r\n    padding: 0px 20px;\r\n    max-width: 480px;\r\n    margin:0 auto;\r\n`;\r\n\r\nconst Header = styled.header`\r\n    height: 10vh;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst CoinsList = styled.ul``;\r\n\r\nconst Coin = styled.li`\r\n    background-color: white;\r\n    color:${props => props.theme.bgColor};\r\n    padding: 20px;\r\n    border-radius: 15px;\r\n    margin-bottom: 10px;\r\n    a {\r\n        display:flex;\r\n        align-items: center;\r\n        transition: all 0.3s ease-in;\r\n    }\r\n    &:hover {\r\n        a {\r\n            padding: 10px;\r\n            color: ${(props) => props.theme.accentColor};\r\n            font-weight: bolder;\r\n        }\r\n    }\r\n`;\r\n\r\nconst Title = styled.h1`\r\n    color:${props => props.theme.accentColor};\r\n    font-size: 48px;\r\n`\r\n\r\nconst Loader = styled.span`\r\n    display: block;\r\n    text-align: center;\r\n`\r\n\r\ninterface CoinInterface {\r\n    id: string,\r\n    name: string,\r\n    symbol: string,\r\n    rank: number,\r\n    is_new: boolean,\r\n    is_active: boolean,\r\n    type: string,\r\n}\r\n\r\nconst Img = styled.img`\r\n    margin-right:10px;\r\n    width: 35px;\r\n    height: 35px;\r\n`\r\n\r\n\r\n\r\nconst Coins = () => {\r\n\r\n    const [coins, setCoins] = useState<CoinInterface[]>([])\r\n    const [loading, setLoading] = useState(true);\r\n    \r\n    useEffect(() => {\r\n        (async () => {\r\n            const response = await fetch(\"https://api.coinpaprika.com/v1/coins\")\r\n            const json = await response.json();\r\n            setCoins(json.slice(0, 100))\r\n            setLoading(false);\r\n            })();\r\n    }, []) \r\n\r\n    return (\r\n        <Container>\r\n            <Header>\r\n                <Title>Coins</Title>\r\n            </Header>\r\n            { loading ? (<Loader>Loading...</Loader>) : \r\n                (\r\n                    <CoinsList>\r\n                        {\r\n                        coins.map(coin => (\r\n                            <Coin key={coin.id} >\r\n                                <Link \r\n                                    to={`/${coin.id}`}\r\n                                    state={{name:coin.name, rank:coin.rank}}\r\n                                    >\r\n                                    <Img src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}/>\r\n                                    {coin.name} &rarr;\r\n                                </Link>\r\n                            </Coin>\r\n                            )\r\n                        )\r\n                        } \r\n                    </CoinsList>\r\n                )\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Coins;","import {BrowserRouter, Routes, Route} from \"react-router-dom\";\r\nimport Coin from './routes/Coin'\r\nimport Coins from './routes/Coins'\r\n\r\n\r\nconst Router = () => {\r\n    return (\r\n    <BrowserRouter>\r\n        <Routes>\r\n            <Route path={`${process.env.PUBLIC_URL}/`} element={<Coins/>} />\r\n            <Route path=\"/:coinId/*\" element={<Coin/>} />\r\n        </Routes>\r\n    </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Router;","import { createGlobalStyle } from \"styled-components\";\r\n\r\n// Reset\r\nexport const ResetStyle =  createGlobalStyle`\r\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\r\nhtml, body, div, span, applet, object, iframe,\r\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\na, abbr, acronym, address, big, cite, code,\r\ndel, dfn, em, img, ins, kbd, q, s, samp,\r\nsmall, strike, strong, sub, sup, tt, var,\r\nb, u, i, center,\r\ndl, dt, dd, ol, ul, li,\r\nfieldset, form, label, legend,\r\ntable, caption, tbody, tfoot, thead, tr, th, td,\r\narticle, aside, canvas, details, embed, \r\nfigure, figcaption, footer, header, hgroup, \r\nmenu, nav, output, ruby, section, summary,\r\ntime, mark, audio, video {\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\tborder: 0;\r\n\tfont-size: 100%;\r\n\tfont: inherit;\r\n\tvertical-align: baseline;\r\n}\r\n/* HTML5 display-role reset for older browsers */\r\narticle, aside, details, figcaption, figure, \r\nfooter, header, hgroup, menu, nav, section {\r\n\tdisplay: block;\r\n}\r\nbody {\r\n\tline-height: 1;\r\n}\r\nol, ul {\r\n\tlist-style: none;\r\n}\r\nblockquote, q {\r\n\tquotes: none;\r\n}\r\nblockquote:before, blockquote:after,\r\nq:before, q:after {\r\n\tcontent: '';\r\n\tcontent: none;\r\n}\r\ntable {\r\n\tborder-collapse: collapse;\r\n\tborder-spacing: 0;\r\n}\r\n\r\n* {\r\n    box-sizing: border-box;\r\n}\r\nbody {\r\n    font-family: 'Source Sans Pro', sans-serif;\r\n}\r\n\r\na {\r\n    text-decoration: none;\r\n}\r\n\r\n`","import React from 'react';\r\nimport Router from \"./Router\"\r\nimport { ResetStyle } from \"./ResetStyle\";\r\nimport { createGlobalStyle } from \"styled-components\"\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  body {\r\n    background-color: ${props => props.theme.bgColor};\r\n    color:${props => props.theme.textColor};\r\n    line-height: 1.2;\r\n  }\r\n\r\n  a {\r\n    color:inherit;\r\n  }\r\n`\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <ResetStyle/>\r\n      <GlobalStyle/>\r\n      <Router/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { theme } from \"./theme\";\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={theme}>\r\n      <App />\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n","import { DefaultTheme } from \"styled-components\";\r\n\r\nexport const theme:DefaultTheme = {\r\n    bgColor: \"#222f3e\",\r\n    textColor: \"#c8d6e5\",\r\n    accentColor: \"#10ac84\",\r\n    fontWeightBold: \"bold\"\r\n}\r\n\r\n"],"sourceRoot":""}